// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sort_vector
arma::vec sort_vector(arma::vec v);
RcppExport SEXP _MarginalMaxTest_sort_vector(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(sort_vector(v));
    return rcpp_result_gen;
END_RCPP
}
// center_matrix_rcpp
List center_matrix_rcpp(arma::mat& x);
RcppExport SEXP _MarginalMaxTest_center_matrix_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(center_matrix_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// get_t_statistics_rcpp
arma::mat get_t_statistics_rcpp(const arma::mat& x, const arma::mat& y, const arma::vec& var_x, const arma::vec& var_y);
RcppExport SEXP _MarginalMaxTest_get_t_statistics_rcpp(SEXP xSEXP, SEXP ySEXP, SEXP var_xSEXP, SEXP var_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type var_x(var_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type var_y(var_ySEXP);
    rcpp_result_gen = Rcpp::wrap(get_t_statistics_rcpp(x, y, var_x, var_y));
    return rcpp_result_gen;
END_RCPP
}
// aggregate_by_cum_sum_rcpp
arma::vec aggregate_by_cum_sum_rcpp(const arma::vec& t);
RcppExport SEXP _MarginalMaxTest_aggregate_by_cum_sum_rcpp(SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(aggregate_by_cum_sum_rcpp(t));
    return rcpp_result_gen;
END_RCPP
}
// aggregate_marginals_rcpp
arma::mat aggregate_marginals_rcpp(const arma::mat& t);
RcppExport SEXP _MarginalMaxTest_aggregate_marginals_rcpp(SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(aggregate_marginals_rcpp(t));
    return rcpp_result_gen;
END_RCPP
}
// get_p_value_rcpp
double get_p_value_rcpp(double obs, const arma::vec& null);
RcppExport SEXP _MarginalMaxTest_get_p_value_rcpp(SEXP obsSEXP, SEXP nullSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type null(nullSEXP);
    rcpp_result_gen = Rcpp::wrap(get_p_value_rcpp(obs, null));
    return rcpp_result_gen;
END_RCPP
}
// simulate_null_rcpp
List simulate_null_rcpp(const arma::mat& x, const arma::vec& var_x, int q, int n_sim);
RcppExport SEXP _MarginalMaxTest_simulate_null_rcpp(SEXP xSEXP, SEXP var_xSEXP, SEXP qSEXP, SEXP n_simSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type var_x(var_xSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type n_sim(n_simSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_null_rcpp(x, var_x, q, n_sim));
    return rcpp_result_gen;
END_RCPP
}
// detect_effect_rcpp
NumericVector detect_effect_rcpp(arma::mat x, arma::vec y, arma::vec alpha, int num_sim);
RcppExport SEXP _MarginalMaxTest_detect_effect_rcpp(SEXP xSEXP, SEXP ySEXP, SEXP alphaSEXP, SEXP num_simSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type num_sim(num_simSEXP);
    rcpp_result_gen = Rcpp::wrap(detect_effect_rcpp(x, y, alpha, num_sim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MarginalMaxTest_sort_vector", (DL_FUNC) &_MarginalMaxTest_sort_vector, 1},
    {"_MarginalMaxTest_center_matrix_rcpp", (DL_FUNC) &_MarginalMaxTest_center_matrix_rcpp, 1},
    {"_MarginalMaxTest_get_t_statistics_rcpp", (DL_FUNC) &_MarginalMaxTest_get_t_statistics_rcpp, 4},
    {"_MarginalMaxTest_aggregate_by_cum_sum_rcpp", (DL_FUNC) &_MarginalMaxTest_aggregate_by_cum_sum_rcpp, 1},
    {"_MarginalMaxTest_aggregate_marginals_rcpp", (DL_FUNC) &_MarginalMaxTest_aggregate_marginals_rcpp, 1},
    {"_MarginalMaxTest_get_p_value_rcpp", (DL_FUNC) &_MarginalMaxTest_get_p_value_rcpp, 2},
    {"_MarginalMaxTest_simulate_null_rcpp", (DL_FUNC) &_MarginalMaxTest_simulate_null_rcpp, 4},
    {"_MarginalMaxTest_detect_effect_rcpp", (DL_FUNC) &_MarginalMaxTest_detect_effect_rcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_MarginalMaxTest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
